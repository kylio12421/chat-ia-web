#!/usr/bin/env python3
"""
Script de d√©ploiement pour AI Assistant
Facilite le d√©ploiement sur Render et la configuration
"""

import os
import sys
import subprocess
import secrets
from pathlib import Path

def print_banner():
    """Affiche la banni√®re du script"""
    print("""
ü§ñ AI Assistant - Script de D√©ploiement
========================================
    """)

def check_requirements():
    """V√©rifie que tous les fichiers requis sont pr√©sents"""
    required_files = [
        'app.py',
        'requirements.txt',
        'templates/index.html',
        'README.md'
    ]
    
    missing_files = []
    for file in required_files:
        if not Path(file).exists():
            missing_files.append(file)
    
    if missing_files:
        print(f"‚ùå Fichiers manquants: {', '.join(missing_files)}")
        return False
    
    print("‚úÖ Tous les fichiers requis sont pr√©sents")
    return True

def create_env_file():
    """Cr√©e le fichier .env avec les variables d'environnement"""
    env_file = Path('.env')
    
    if env_file.exists():
        print("‚ö†Ô∏è  Le fichier .env existe d√©j√†")
        response = input("Voulez-vous le remplacer ? (y/N): ")
        if response.lower() != 'y':
            return
    
    # G√©n√©rer une cl√© secr√®te
    secret_key = secrets.token_urlsafe(32)
    
    env_content = f"""# Configuration OpenAI
OPENAI_API_KEY=votre_cl√©_api_openai_ici

# Configuration Flask
SECRET_KEY={secret_key}
FLASK_ENV=development

# Configuration Serveur
PORT=5000
"""
    
    with open(env_file, 'w', encoding='utf-8') as f:
        f.write(env_content)
    
    print("‚úÖ Fichier .env cr√©√©")
    print("‚ö†Ô∏è  N'oubliez pas de remplacer 'votre_cl√©_api_openai_ici' par votre vraie cl√© API OpenAI")

def test_local():
    """Teste l'application localement"""
    print("\nüß™ Test local de l'application...")
    
    try:
        # V√©rifier que les d√©pendances sont install√©es
        import flask
        import openai
        print("‚úÖ D√©pendances install√©es")
    except ImportError as e:
        print(f"‚ùå D√©pendance manquante: {e}")
        print("Installez les d√©pendances avec: pip install -r requirements.txt")
        return False
    
    # V√©rifier la cl√© API
    if not os.getenv('OPENAI_API_KEY'):
        print("‚ö†Ô∏è  Cl√© API OpenAI non configur√©e")
        print("Configurez votre cl√© API dans le fichier .env")
        return False
    
    print("‚úÖ Configuration OK")
    return True

def git_setup():
    """Configure Git pour le d√©ploiement"""
    print("\nüì¶ Configuration Git...")
    
    # V√©rifier si Git est install√©
    try:
        subprocess.run(['git', '--version'], check=True, capture_output=True)
    except (subprocess.CalledProcessError, FileNotFoundError):
        print("‚ùå Git n'est pas install√© ou n'est pas dans le PATH")
        return False
    
    # Initialiser Git si n√©cessaire
    if not Path('.git').exists():
        subprocess.run(['git', 'init'], check=True)
        print("‚úÖ Repository Git initialis√©")
    
    # Ajouter tous les fichiers
    subprocess.run(['git', 'add', '.'], check=True)
    
    # V√©rifier s'il y a des changements
    result = subprocess.run(['git', 'status', '--porcelain'], capture_output=True, text=True)
    if not result.stdout.strip():
        print("‚úÖ Aucun changement √† commiter")
        return True
    
    # Faire le commit
    subprocess.run(['git', 'commit', '-m', 'Update AI Assistant'], check=True)
    print("‚úÖ Changements commit√©s")
    
    return True

def deploy_instructions():
    """Affiche les instructions de d√©ploiement"""
    print("""
üöÄ Instructions de D√©ploiement sur Render
=========================================

1. Cr√©ez un compte sur Render.com
2. Cliquez sur "New +" ‚Üí "Web Service"
3. Connectez votre repository GitHub
4. Configurez le service :
   - Name: ai-assistant
   - Environment: Python 3
   - Build Command: pip install -r requirements.txt
   - Start Command: gunicorn app:app
   - Plan: Free

5. Variables d'environnement √† configurer :
   - OPENAI_API_KEY: Votre cl√© API OpenAI
   - SECRET_KEY: (g√©n√©r√© automatiquement)

6. Cliquez sur "Create Web Service"

Votre application sera accessible sur : https://votre-app.onrender.com

üìù Notes importantes :
- Assurez-vous que votre cl√© API OpenAI est valide
- Le d√©ploiement prend 2-3 minutes
- L'application peut prendre quelques secondes √† d√©marrer apr√®s inactivit√©
    """)

def main():
    """Fonction principale"""
    print_banner()
    
    if not check_requirements():
        sys.exit(1)
    
    # Menu interactif
    while True:
        print("\nOptions disponibles:")
        print("1. Cr√©er le fichier .env")
        print("2. Tester l'application localement")
        print("3. Configurer Git")
        print("4. Afficher les instructions de d√©ploiement")
        print("5. Quitter")
        
        choice = input("\nChoisissez une option (1-5): ").strip()
        
        if choice == '1':
            create_env_file()
        elif choice == '2':
            test_local()
        elif choice == '3':
            git_setup()
        elif choice == '4':
            deploy_instructions()
        elif choice == '5':
            print("üëã Au revoir !")
            break
        else:
            print("‚ùå Option invalide")

if __name__ == '__main__':
    main() 